#------------��������
# Ӧ������
spring.application.name=shardingsphere-jdbc-demo
# ������������
#spring.profiles.active=dev
# �ڴ�ģʽ
spring.shardingsphere.mode.type=Memory

# ��ӡSQl
spring.shardingsphere.props.sql-show=true

#-----------����Դ����
# ������ʵ����Դ
spring.shardingsphere.datasource.names=server-user,server-order0,server-order1

# ���õ� 1 ������Դ
spring.shardingsphere.datasource.server-user.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.server-user.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.server-user.jdbc-url=jdbc:mysql://192.168.3.212:3301/db_user
spring.shardingsphere.datasource.server-user.username=root
spring.shardingsphere.datasource.server-user.password=123456

# ���õ� 2 ������Դ
spring.shardingsphere.datasource.server-order0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.server-order0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.server-order0.jdbc-url=jdbc:mysql://192.168.3.212:3310/db_order
spring.shardingsphere.datasource.server-order0.username=root
spring.shardingsphere.datasource.server-order0.password=123456

# ���õ� 3 ������Դ
spring.shardingsphere.datasource.server-order1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.server-order1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.server-order1.jdbc-url=jdbc:mysql://192.168.3.212:3311/db_order
spring.shardingsphere.datasource.server-order1.username=root
spring.shardingsphere.datasource.server-order1.password=123456

# ��׼��Ƭ�����ã����ݽڵ㣩
# spring.shardingsphere.rules.sharding.tables.<table-name>.actual-data-nodes=ֵ
# ֵ������Դ�� + ������ɣ���С����ָ���
# <table-name>���߼�����
spring.shardingsphere.rules.sharding.tables.t_user.actual-data-nodes=server-user.t_user
spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=server-order$->{0..1}.t_order$->{0..1}

#------------------------�ֿ����
# ��Ƭ������
spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-column=user_id
# ��Ƭ�㷨����alg_inline_userid��alg_mod
spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-algorithm-name=alg_inline_userid

#------------------------��Ƭ�㷨����
# �б��ʽ��Ƭ�㷨
# ��Ƭ�㷨����
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_inline_userid.type=INLINE
# ��Ƭ�㷨��������
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_inline_userid.props.algorithm-expression=server-order$->{user_id % 2}

# ȡģ��Ƭ�㷨
# ��Ƭ�㷨����
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_mod.type=MOD
# ��Ƭ�㷨��������
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_mod.props.sharding-count=2


#------------------------�ֱ����
# ��Ƭ������
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=order_no
# ��Ƭ�㷨����
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=alg_hash_mod


#------------------------��Ƭ�㷨����
# ��ϣȡģ��Ƭ�㷨
# ��Ƭ�㷨����
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_hash_mod.type=HASH_MOD
# ��Ƭ�㷨��������
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_hash_mod.props.sharding-count=2


#------------------------�ֲ�ʽ����(�ֲ�ʽ��������ѩ���㷨)��������
# �ֲ�ʽ����������
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.column=id
# �ֲ�ʽ�����㷨����
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.key-generator-name=alg_snowflake

# �ֲ�ʽ�����㷨����
# �ֲ�ʽ�����㷨����
spring.shardingsphere.rules.sharding.key-generators.alg_snowflake.type=SNOWFLAKE
# �ֲ�ʽ�����㷨��������
#spring.shardingsphere.rules.sharding.key-generators.alg_snowflake.props.xxx=